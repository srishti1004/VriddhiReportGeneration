# Generated by Django 3.2.8 on 2022-08-18 11:45

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acc_number', models.CharField(db_column='AccountNumber', max_length=20)),
                ('acc_type', models.CharField(db_column='AccountType', max_length=20)),
                ('acc_num_vir', models.CharField(db_column='AcctNum_Virtual', max_length=20)),
                ('cot_pay_gl', models.FloatField(db_column='COT_Pay_GL')),
                ('cot_pay_jlg', models.FloatField(db_column='COT_Pay_JLG')),
                ('cot_limit', models.FloatField(db_column='COTLimit')),
                ('date_closure', models.DateField(db_column='Date_Closure')),
                ('date_firstInstallment', models.DateField(db_column='Date_FirstInstalment')),
                ('date_preclosure', models.DateField(db_column='Date_Preclosure')),
                ('date_of_opening', models.DateField(db_column='DateOfOpening')),
                ('emi', models.FloatField(db_column='EMI')),
                ('emi_first', models.FloatField(db_column='EMI_FirstInst')),
                ('gl_pay_jlg', models.FloatField(db_column='GL_Pay_JLG')),
                ('gold_appraisal_fee', models.FloatField(db_column='GoldAppraisalFee')),
                ('ifsc_virtual', models.CharField(db_column='IFSC_Virtual', max_length=20)),
                ('insurance_deduction', models.FloatField(db_column='InsuranceDeduction')),
                ('interest_firstMonth', models.FloatField(db_column='Interest_FirstMonth')),
                ('interest_rate', models.FloatField(db_column='InterestRate')),
                ('jlg_cash', models.FloatField(db_column='JLG_Cash_Withdrawal')),
                ('loan_amount', models.FloatField(db_column='LoanAmount')),
                ('lpf', models.FloatField(db_column='LPF')),
                ('mem_memtype', models.TextField(db_column='Mem_MemType')),
                ('mem_pay_gl', models.FloatField(db_column='Mem_Pay_GL')),
                ('mem_pay_jlg', models.FloatField(db_column='Mem_Pay_JLG')),
                ('mem_num', models.CharField(db_column='MemNum', max_length=10)),
                ('retrieval_loan', models.FloatField(db_column='RetrievalLoan')),
                ('rule', models.TextField(db_column='Rule')),
                ('share_purchase', models.FloatField(db_column='SharePurchase')),
                ('ssa_pay_gl', models.FloatField(db_column='SSA_Pay_GL')),
                ('ssa_pay_jlg', models.FloatField(db_column='SSA_Pay_JLG')),
                ('tenure', models.IntegerField(db_column='Tenure')),
                ('vcmType', models.TextField(db_column='VCMType')),
            ],
            options={
                'db_table': 'newdb_account',
            },
        ),
        migrations.CreateModel(
            name='Account_State',
            fields=[
                ('account_number', models.CharField(db_column='AccountNumber', max_length=20)),
                ('account_type', models.CharField(db_column='AccountType', max_length=20)),
                ('balance_cb', models.FloatField(db_column='Balance_CB')),
                ('balance_ib', models.FloatField(db_column='Balance_IB')),
                ('balance_ob', models.FloatField(db_column='Balance_OB')),
                ('collstatus_ob', models.CharField(db_column='CollStatus_OB', max_length=20)),
                ('date_of_update', models.DateField(db_column='DateOfUpdate')),
                ('date_ren_ob', models.DateField(db_column='DateRen_OB')),
                ('due', models.FloatField(db_column='Due')),
                ('due_ib', models.FloatField(db_column='Due_IB')),
                ('emi_cb', models.FloatField(db_column='EMI_CB')),
                ('emi_ob', models.FloatField(db_column='EMI_OB')),
                ('emi_due', models.FloatField(db_column='EMIDue')),
                ('emidue_ib', models.FloatField(db_column='EMIDue_IB')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('int_due', models.FloatField(db_column='IntDue')),
                ('int_due_ib', models.FloatField(db_column='IntDue_IB')),
                ('int_od_cb', models.FloatField(db_column='IntOD_CB')),
                ('int_od_ob', models.FloatField(db_column='IntOD_OB')),
                ('int_pay_cb', models.FloatField(db_column='IntPay_CB')),
                ('max_due', models.FloatField(db_column='MaxDue')),
                ('max_due_ib', models.FloatField(db_column='MaxDue_IB')),
                ('mem_num', models.CharField(db_column='MemNum', max_length=10)),
                ('Overdue_CB', models.FloatField(db_column='Overdue_CB')),
                ('Overdue_OB', models.FloatField(db_column='Overdue_OB')),
                ('PenalCharge', models.FloatField(db_column='PenalCharge')),
                ('RegBalance_CB', models.FloatField(db_column='RegBalance_CB')),
                ('RegBalance_OB', models.FloatField(db_column='RegBalance_OB')),
                ('RegCharge', models.FloatField(db_column='RegCharge')),
                ('rule', models.TextField(db_column='Rule')),
                ('TotalCharge', models.FloatField(db_column='TotalCharge')),
                ('TotalDue', models.FloatField(db_column='TotalDue')),
                ('TotalDue_IB', models.FloatField(db_column='TotalDue_IB')),
                ('TotalEarn', models.FloatField(db_column='TotalEarn')),
                ('TotalIntDue', models.FloatField(db_column='TotalIntDue')),
                ('TotalIntDue_IB', models.FloatField(db_column='TotalIntDue_IB')),
                ('TotalOD', models.FloatField(db_column='TotalOD')),
                ('TotalOD_IB', models.FloatField(db_column='TotalOD_IB')),
                ('TransferIn_CB', models.FloatField(db_column='TransferIn_CB')),
                ('TransferIn_Tr', models.FloatField(db_column='TransferIn_Tr')),
                ('TransferOut_CB', models.FloatField(db_column='TransferOut_CB')),
                ('TransferOut_Tr', models.FloatField(db_column='TransferOut_Tr')),
                ('type_of_update', models.TextField(db_column='TypeOfUpdate')),
            ],
            options={
                'db_table': 'newdb_account_state',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('acc_num', models.CharField(db_column='AccountNumber', max_length=20)),
                ('amount', models.FloatField(db_column='Amount')),
                ('collect_id', models.IntegerField(db_column='collectionId')),
                ('crdr', models.CharField(db_column='CRDR', max_length=2)),
                ('date', models.DateField(db_column='Date')),
                ('id', models.PositiveBigIntegerField(db_column='id', primary_key=True, serialize=False)),
                ('mem_num', models.CharField(db_column='MemNum', max_length=10)),
                ('narration', models.TextField(db_column='Narration')),
                ('rule', models.TextField(db_column='Rule')),
                ('status', models.IntegerField(db_column='status')),
                ('transaction_type', models.TextField(db_column='TransactionType')),
                ('trans_type_name', models.TextField(db_column='TransTypeName')),
            ],
            options={
                'db_table': 'newdb_transaction',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('address', models.TextField(db_column='Address')),
                ('branch_code', models.TextField(db_column='BranchCode')),
                ('branch_name', models.TextField(db_column='BranchName')),
                ('center', models.TextField(db_column='Center')),
                ('center_id', models.CharField(db_column='CenterID', max_length=255)),
                ('center_name', models.TextField(db_column='CenterName')),
                ('center_num', models.CharField(db_column='CenterNum', max_length=255)),
                ('community', models.TextField(db_column='Community')),
                ('DateSignup', models.TextField(db_column='DateSignup')),
                ('employee_code', models.TextField(db_column='EmployeeCode')),
                ('field_office', models.TextField(db_column='FieldOfficer')),
                ('group_name', models.TextField(db_column='GroupName')),
                ('group_num', models.TextField(db_column='GroupNum')),
                ('member_type', models.CharField(db_column='memberType', max_length=10)),
                ('mem_id', models.TextField(db_column='MemID', primary_key=True, serialize=False)),
                ('mem_name', models.TextField(db_column='MemName')),
                ('mem_num', models.CharField(db_column='MemNum', max_length=100)),
                ('mobile', models.TextField(db_column='Mobile_WhatsApp')),
                ('r001', models.CharField(db_column='R001', max_length=4)),
                ('reg_mobile', models.TextField(db_column='RegMobile')),
                ('role', models.CharField(db_column='Role', max_length=10)),
                ('rule', models.CharField(db_column='Rule', max_length=255)),
                ('whatsapp_mobile', models.CharField(db_column='WhatsAppMobile', max_length=255)),
            ],
            options={
                'db_table': 'newdb_user',
            },
        ),
    ]
